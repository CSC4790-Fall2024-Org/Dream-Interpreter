import React, { useState } from "react";
import { useRouter } from 'expo-router';
import { Text, View, Button, ScrollView, Image, Modal, TouchableOpacity, StyleSheet } from "react-native";

export default function Index() {

  const [showUserManual, setShowUserManual] = useState(false); 
  const router = useRouter();
  const [modalVisible, setModalVisible] = useState(false);

  const handleNavigate = (path: string) => {
    setModalVisible(false); 
    router.push(path);
  };

  return (
    <ScrollView style={{ flex: 1, padding: 20 }}>

      {/* Top Navigation Button */}
      <View style={{ marginVertical: 20 }}>
        <Button title="Navigate to Pages" onPress={() => setModalVisible(true)} />
      </View>

      {/* Modal for displaying page options */}
      <Modal
        animationType="slide"
        transparent={true}
        visible={modalVisible}
        onRequestClose={() => setModalVisible(false)}  
      >
        <View style={styles.modalContainer}>
          <View style={styles.modalContent}>
            <Text style={styles.modalTitle}>Choose a Page</Text>

            <TouchableOpacity style={styles.pageButton} onPress={() => handleNavigate("./")}>
              <Text>Home</Text>
            </TouchableOpacity>

            <TouchableOpacity style={styles.pageButton} onPress={() => handleNavigate('./gemini')}>
              <Text>Gemini</Text>
            </TouchableOpacity>

            <TouchableOpacity style={styles.pageButton} onPress={() => handleNavigate('./gooey')}>
              <Text>Gooey</Text>
            </TouchableOpacity>

            <Button title="Close" onPress={() => setModalVisible(false)} />
          </View>
        </View>
      </Modal>

      {/* Screen message */}
      <View style={{
        flex: 1,
        flexDirection: 'row',
        gap: 20,
        justifyContent: 'center',
        alignItems: 'center',
        marginBottom: 5,
      }}>
        <Image source = {require('../assets/images/gooey-logo.png')} />
        <Image 
          source = {require('../assets/images/gemini-logo.png')}
          style={{width: 128, height: 47}}
        />
      </View>

      <View style={{
        flex: 1,
        justifyContent: "center",
        alignItems: "center",
        marginBottom: 40,
      }}>
        <Text>Welcome to your Nocturnal Navigator App!</Text>
        <Text>This is your Home Screen!</Text>

      </View>

      {/* Toggle User Manual */}
      <Button
        title={showUserManual ? "Hide User Manual" : "Show User Manual"}
        onPress={() => setShowUserManual(!showUserManual)}
      />

      {/* User Manual Section */}
      {showUserManual && (
        <View style={{ marginTop: 20, marginBottom: 20 }}>
          <Text style={{ fontWeight: "bold", fontSize: 18 }}>User Manual</Text>
          <Text>
            We are so glad you are here! Here's how to use this application:
          </Text>
          <Text>1. Enter your dream description in the input field.</Text>
          <Text>2. Acknowledge the disclaimer by checking the checkbox.</Text>
          <Text>3. Click on "Generate Dream Interpretation" to proceed.</Text>
          <Text>4. You can view or download the generated interpretation.</Text>
        </View>
      )}

      {/* Disclaimer about Technology Used */}
      <View style={{ marginTop: 40 }}>
        <Text style={{ fontSize: 16, fontWeight: "bold" }}>Powered by:</Text>
        <Text>This application uses Gooey AI and Gemini AI technologies for dream interpretations.</Text>
      </View>

      {/* AI Disclaimer */}
      <View style={{ marginTop: 20 }}>
        <Text style={{ fontSize: 16, fontWeight: "bold" }}>Disclaimer:</Text>
        <Text>This interpretation is generated by AI and should be used for entertainment purposes only.</Text>
      </View>

      <View style={styles.interpretationContainer}>
        <Text style={styles.normalText}>Get your dream </Text>
        
        {/* Button for "textually" */}
        <TouchableOpacity onPress={() => handleNavigate('/gemini')}>
          <Text style={styles.linkText}>textually</Text>
        </TouchableOpacity>
        
        <Text style={styles.normalText}>, or </Text>
        
        {/* Button for "visually" */}
        <TouchableOpacity onPress={() => handleNavigate('/gooey')}>
          <Text style={styles.linkText}>visually</Text>
        </TouchableOpacity>
        
        <Text style={styles.normalText}> interpreted!</Text>
      </View>
      
    </ScrollView>
  );
}

const styles = StyleSheet.create({
  modalContainer: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: 'rgba(0, 0, 0, 0.5)',
  },
  modalContent: {
    width: 300,
    padding: 20,
    backgroundColor: 'white',
    borderRadius: 10,
  },
  modalTitle: {
    fontSize: 18,
    marginBottom: 20,
    textAlign: 'center',
  },
  pageButton: {
    padding: 10,
    marginBottom: 10,
    backgroundColor: '#ddd',
    alignItems: 'center',
    borderRadius: 5,
  },
  interpretationContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'center',
    marginVertical: 20,
  },
  normalText: {
    fontSize: 16,
    color: 'black',
  },
  linkText: {
    fontSize: 16,
    color: 'blue',
    textDecorationLine: 'underline',
  },
});